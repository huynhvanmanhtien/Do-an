---
- name: Check Operating System
  fail:
    msg="You're not running a supported operating system (CentOS or RHEL 7+)"
  when: ((ansible_os_family != "RedHat") or (ansible_distribution_major_version|int < 7))

- name: Import EPEL GPG Key
  rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state=present
  become: true

- name: Check for EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state=present
  become: true

- name: Install HTTPD and OpenSSL
  yum:
    name: ['httpd', 'httpd-tools', 'net-snmp-utils', 'net-tools', 'cyrus-sasl-plain']
    state: present
  become: true

- name: Install nagios packages and common plugins
  yum:
    name: ['nagios', 'nagios-common', 'nagios-plugins-ssh', 'nagios-plugins-tcp', 'nagios-plugins-http',
    'nagios-plugins-load', 'nagios-plugins-nrpe', 'nagios-plugins-uptime', 'nagios-plugins-swap',
    'nagios-plugins-ping', 'nagios-plugins-procs', 'nagios-plugins-users', 'nagios-plugins-disk',
    'nagios-plugins-dns', 'libsemanage-python', python-requests]
    state: present
  become: true

- name: Check nagios Users
  stat: path=/etc/nagios/passwd
  ignore_errors: true
  register: nagios_user_pwfile_exists
  become: true

- name: Create empty password file
  command: touch /etc/nagios/passwd
  args:
    creates: /etc/nagios/passwd
  when: nagios_user_pwfile_exists != 0
  become: true

- name: Create nagios admin user
  command: htpasswd -b -c /etc/nagios/passwd {{nagios_username}} {{nagios_password}}
  ignore_errors: true
  when: nagios_user_pwfile_exists != 0
  become: true

- name: Create nagios guest user
  command: htpasswd -b /etc/nagios/passwd {{nagios_ro_username}} {{nagios_ro_password}}
  when: nagios_create_guest_user|bool
  become: true

- name: Configure nagios main configuration
  copy: src=nagios.cfg dest=/etc/nagios/nagios.cfg
  become: true

- name: Generate the nagios contact template and localhost config
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/objects/{{ item }}
            force=yes
  with_items:
    - contacts.cfg
    - localhost.cfg
    - servers.cfg
  become: true

- name: Generate additional commands.cfg from template
  template: src=objects_commands.cfg.j2
            dest=/etc/nagios/objects/commands.cfg
            force=yes
  become: true

- name: Generate the nagios user CGI template
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/{{ item }}
  with_items:
    - cgi.cfg
    - services.cfg
  become: true

- name: Create nagios socket tmp files
  file:
    path=/var/log/nagios/rw
    state=directory
    owner=nagios
    group=nagios
    mode=0777
    seuser=system_u
  become: true

- name: Create nagios results directory
  file:
    path=/var/log/nagios/spool/checkresults
    state=directory
    owner=nagios
    group=nagios
    mode=0755
    seuser=system_u
  become: true

- name: Check/fix systemd service file
  lineinfile: dest=/usr/lib/systemd/system/nagios.service \
          regexp="^ExecStopPost=" \
          line="ExecStopPost=/usr/bin/rm -f /var/spool/nagios/cmd/nagios.cmd /var/log/nagios/rw/nagios.qh"
  register: systemd_nagios_changed
  become: true

- name: Set HTTP Listen Port
  lineinfile: dest=/etc/httpd/conf/httpd.conf \
          regexp="^Listen" \
          line="Listen {{nagios_http_port}}"
  become: true

- name: Create file sasl_passwd
  command: touch /etc/postfix/sasl_passwd

- name: Add email
  blockinfile:
    dest: /etc/postfix/sasl_passwd
    block: |
      [smtp.gmail.com]:587 hvmtdoan@gmail.com:Tien123456!@#

- name: Add file main.cf
  blockinfile:
    dest: /etc/postfix/main.cf
    block: |
      relayhost = [smtp.gmail.com]:587
      smtp_use_tls = yes
      smtp_sasl_auth_enable = yes
      smtp_sasl_security_options =
      smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
      smtp_tls_CAfile = /etc/ssl/certs/ca-bundle.crt

- name: Root for sasl_passwd
  file:
    path=/etc/postfix/sasl_passwd
    owner=root
    group=postfix
    mode=600
  become: true

- name: Postmap
  command: postmap /etc/postfix/sasl_passwd

- name: Install DDOS scritps
  get_url:
    url: https://raw.github.com/nicolargo/nagiosautoinstall/master/check_ddos.pl
    dest: /usr/lib64/nagios/plugins/

- name: Change mode for DDOS file
  file:
    path=/usr/lib64/nagios/plugins/check_ddos.pl
    owner=nagios
    group=nagios
    mode=777

- name: Restart postfix
  command: systemctl restart postfix
  
- name: Enable postfix
  command: systemctl enable postfix

- name: Reload Systemd if needed
  command: systemctl daemon-reload
  when: systemd_nagios_changed !=0
  become: true

- name: Start nagios service
  command: systemctl restart nagios.service
  become: true

- name: Set nagios to start on boot
  command: systemctl enable nagios.service
  ignore_errors: true
  become: true

- name: Setup HTTPD service
  command: systemctl enable httpd.service
  ignore_errors: true
  become: true

- name: Restart HTTPD service
  command: systemctl restart httpd.service
  ignore_errors: true
  become: true

